{"version":3,"sources":["store/index.ts","api/api.ts","components/Header/Header.tsx","store/selectors.ts","components/Main/EUR/EUR.tsx","components/Main/Home/Home.tsx","components/Main/PLN/PLN.tsx","components/Main/USD/USD.tsx","App.tsx","index.tsx"],"names":["ActionType","getData","a","fetch","response","json","Header","className","to","getExchange","state","exchange","EUR","useState","inputValue","setInputValue","sum","setSum","useSelector","exportInEUR","UAH","type","value","onKeyDown","e","key","onChange","event","target","classnames","onClick","toFixed","Home","PLN","exportInPLN","USD","exportInUSD","setExchange","createAction","SET_EXCHANGE","reducer","createReducer","builder","addCase","action","payload","store","configureStore","App","dispatch","useDispatch","useEffect","rates","alert","loadDataFromServer","path","element","replace","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cdeba3b8.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-shadow */\nimport { configureStore, createAction, createReducer } from '@reduxjs/toolkit';\n\nenum ActionType {\n  SET_EXCHANGE = 'SET_EXCHANGE',\n}\n\nconst InitialState = {\n  exchange: {},\n};\n\nexport const setExchange = createAction<Exchange>(ActionType.SET_EXCHANGE);\n\nconst reducer = createReducer(InitialState, (builder) => {\n  builder.addCase(setExchange, (state, action:any) => {\n    // eslint-disable-next-line no-param-reassign\n    state.exchange = action.payload;\n  });\n});\n\nexport const store = configureStore({\n  reducer,\n});\n","const API = 'https://api.exchangerate.host/latest';\n\nexport const getData = async () => {\n  const response = await fetch(API);\n\n  return response.json();\n};\n","/* eslint-disable jsx-a11y/tabindex-no-positive */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Header.scss';\n\nexport const Header: React.FC = () => {\n  return (\n    <div className=\"exchange\">\n      <Link className=\"exchange__link\" to=\"usd\">USD</Link>\n      <Link className=\"exchange__link\" to=\"eur\">EUR</Link>\n      <Link className=\"exchange__link\" to=\"pln\">PLN</Link>\n    </div>\n  );\n};\n","export const getExchange = (state: State) => state.exchange;\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport classnames from 'classnames';\nimport { getExchange } from '../../../store/selectors';\nimport './EUR.scss';\n\nexport const EUR: React.FC = () => {\n  const [inputValue, setInputValue] = useState<number>(0);\n  const [sum, setSum] = useState<number>();\n  const exchange = useSelector(getExchange);\n\n  const exportInEUR = () => {\n    setSum((inputValue / exchange.UAH));\n  };\n\n  return (\n    <div className=\"eur\">\n      <p className=\"eur__title\">Exchange UAH to EUR</p>\n      <input\n        className=\"eur__input input is-primary\"\n        type=\"number\"\n        value={inputValue}\n        onKeyDown={e => e.key === 'Enter' && (exportInEUR())}\n        onChange={(event) => {\n          setInputValue(+event.target.value);\n        }}\n      />\n      <button\n        className={classnames('eur__button button is-primary', { 'is-danger': inputValue === 0 })}\n        type=\"button\"\n        onClick={exportInEUR}\n      >\n        {inputValue !== 0 ? 'Exchange' : 'Write sum in input'}\n      </button>\n      <p className=\"eur__total\">{sum?.toFixed(2)}</p>\n    </div>\n  );\n};\n","import React from 'react';\nimport './Home.scss';\n\nexport const Home: React.FC = () => {\n  return (\n    <div className=\"home\">\n      <p className=\"home__title\">Ð¡hoose currency exchange !!!</p>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport classnames from 'classnames';\nimport { getExchange } from '../../../store/selectors';\nimport './PLN.scss';\n\nexport const PLN: React.FC = () => {\n  const [inputValue, setInputValue] = useState<number>(0);\n  const [sum, setSum] = useState<number>();\n  const exchange = useSelector(getExchange);\n\n  const exportInPLN = () => {\n    setSum((inputValue / exchange.UAH) * exchange.PLN);\n  };\n\n  return (\n    <div className=\"pln\">\n      <p className=\"pln__title\">Exchange UAH to PLN</p>\n      <input\n        className=\"pln__input input is-primary\"\n        type=\"number\"\n        value={inputValue}\n        onKeyDown={e => e.key === 'Enter' && (exportInPLN())}\n        onChange={(event) => {\n          setInputValue(+event.target.value);\n        }}\n      />\n      <button\n        className={classnames('pln__button button is-primary', { 'is-danger': inputValue === 0 })}\n        type=\"button\"\n        onClick={exportInPLN}\n      >\n        {inputValue !== 0 ? 'Exchange' : 'Write sum in input'}\n      </button>\n      <p className=\"pln__total\">{sum?.toFixed(2)}</p>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport classnames from 'classnames';\nimport { getExchange } from '../../../store/selectors';\nimport './USD.scss';\n\nexport const USD: React.FC = () => {\n  const [inputValue, setInputValue] = useState<number>(0);\n  const [sum, setSum] = useState<number>();\n  const exchange = useSelector(getExchange);\n\n  const exportInUSD = () => {\n    setSum((inputValue / exchange.UAH) * exchange.USD);\n  };\n\n  return (\n    <div className=\"usd\">\n      <p className=\"usd__title\">Exchange UAH to USD</p>\n      <input\n        className=\"usd__input input is-primary\"\n        type=\"number\"\n        value={inputValue}\n        onKeyDown={e => e.key === 'Enter' && (exportInUSD())}\n        onChange={(event) => {\n          setInputValue(+event.target.value);\n        }}\n      />\n      <button\n        className={classnames('usd__button button is-primary', { 'is-danger': inputValue === 0 })}\n        type=\"button\"\n        onClick={exportInUSD}\n      >\n        {inputValue !== 0 ? 'Exchange' : 'Write sum in input'}\n      </button>\n      <p className=\"usd__total\">{sum?.toFixed(2)}</p>\n    </div>\n  );\n};\n","/* eslint-disable no-alert */\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { getData } from './api/api';\nimport './App.scss';\nimport { Header } from './components/Header';\nimport { EUR } from './components/Main/EUR';\nimport { Home } from './components/Main/Home';\nimport { PLN } from './components/Main/PLN';\nimport { USD } from './components/Main/USD';\nimport { setExchange } from './store';\nimport { getExchange } from './store/selectors';\n\nexport const App: React.FC = () => {\n  const dispatch = useDispatch();\n  const exchange = useSelector(getExchange);\n\n  useEffect(() => {\n    const loadDataFromServer = async () => {\n      try {\n        const response = await getData();\n\n        dispatch(setExchange(response.rates));\n      } catch (error) {\n        alert('Error try again');\n      }\n    };\n\n    loadDataFromServer();\n  }, []);\n\n  return (\n    <>\n      <Header />\n      { !exchange && (\n        <p>Loading...</p>\n      )}\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"usd\" element={<USD />} />\n        <Route path=\"pln\" element={<PLN />} />\n        <Route path=\"eur\" element={<EUR />} />\n      </Routes>\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\nimport { store } from './store';\nimport 'bulma/css/bulma.min.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </React.StrictMode>\n  </Provider>,\n\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}